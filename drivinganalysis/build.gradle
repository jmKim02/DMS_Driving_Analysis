plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.4' // protobuf 플러그인 추가
}

group = 'com.sejong'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// JWT 관련 의존성 추가
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// WebSocket 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// gRPC 의존성 추가
	implementation 'io.grpc:grpc-netty-shaded:1.59.0'
	implementation 'io.grpc:grpc-protobuf:1.59.0'
	implementation 'io.grpc:grpc-stub:1.59.0'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'

	implementation 'com.google.protobuf:protobuf-java:3.25.1'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'

	// test 용도
	runtimeOnly 'com.h2database:h2'  // H2 의존성 추가

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// protobuf 설정
protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.25.1'
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.59.0'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}

// protobuf 소스 디렉토리 설정
sourceSets {
	main {
		proto {
			srcDir 'src/main/proto'
		}
	}
}

tasks.withType(ProcessResources) {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.named('test') {
	useJUnitPlatform()
}
